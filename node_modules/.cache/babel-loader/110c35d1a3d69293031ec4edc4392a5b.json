{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  body {\\n    background: center / cover url(\\\"./img/calendar_backdrop.jpg\\\");\\n    margin: 0;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { StyledApp } from \"./Style\";\nimport { createCalendar } from \"./helpers\";\nimport Hatch from \"./Hatches\";\nconst GlobalStyle = createGlobalStyle(_templateObject());\n\nfunction App() {\n  const _useState = useState(createCalendar()),\n        _useState2 = _slicedToArray(_useState, 2),\n        hatches = _useState2[0],\n        setHatches = _useState2[1];\n\n  useEffect(() => {\n    // Could use if statements instead off course\n    const calendar = localStorage.calendar ? JSON.parse(localStorage.calendar) : createCalendar();\n    setHatches(calendar);\n  }, []); // Store calendar in localStorage\n\n  useEffect(() => {\n    // Could use if statements instead off course\n    hatches.length && localStorage.setItem(\"calendar\", JSON.stringify(hatches));\n  }, [hatches]);\n\n  const handleFlipHatch = id => {\n    const updatedHatches = hatches.map(hatch => hatch.id === id ? _objectSpread({}, hatch, {\n      open: !hatch.open\n    }) : hatch);\n    setHatches(updatedHatches);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(StyledApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, hatches.map(hatch => React.createElement(Hatch, {\n    key: hatch.id,\n    hatchData: hatch,\n    handleClick: handleFlipHatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/benjamin/Desktop/start-here/src/App.js"],"names":["React","useState","useEffect","createGlobalStyle","StyledApp","createCalendar","Hatch","GlobalStyle","App","hatches","setHatches","calendar","localStorage","JSON","parse","length","setItem","stringify","handleFlipHatch","id","updatedHatches","map","hatch","open"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,WAAlB;AAEA,MAAMC,WAAW,GAAGJ,iBAAH,mBAAjB;;AAOA,SAASK,GAAT,GAAe;AAAA,oBACiBP,QAAQ,CAACI,cAAc,EAAf,CADzB;AAAA;AAAA,QACNI,OADM;AAAA,QACGC,UADH;;AAGbR,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,QAAQ,GAAGC,YAAY,CAACD,QAAb,GACbE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACD,QAAxB,CADa,GAEbN,cAAc,EAFlB;AAIAK,IAAAA,UAAU,CAACC,QAAD,CAAV;AACD,GAPQ,EAON,EAPM,CAAT,CAHa,CAYb;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,OAAO,CAACM,MAAR,IAAkBH,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACI,SAAL,CAAeR,OAAf,CAAjC,CAAlB;AACD,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAKA,QAAMS,eAAe,GAAGC,EAAE,IAAI;AAC5B,UAAMC,cAAc,GAAGX,OAAO,CAACY,GAAR,CAAYC,KAAK,IACtCA,KAAK,CAACH,EAAN,KAAaA,EAAb,qBAAuBG,KAAvB;AAA8BC,MAAAA,IAAI,EAAE,CAACD,KAAK,CAACC;AAA3C,SAAoDD,KAD/B,CAAvB;AAGAZ,IAAAA,UAAU,CAACU,cAAD,CAAV;AACD,GALD;;AAOA,SACE,0CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,OAAO,CAACY,GAAR,CAAYC,KAAK,IAChB,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACH,EADb;AAEE,IAAA,SAAS,EAAEG,KAFb;AAGE,IAAA,WAAW,EAAEJ,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAcD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { StyledApp } from \"./Style\";\nimport { createCalendar } from \"./helpers\";\nimport Hatch from \"./Hatches\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: center / cover url(\"./img/calendar_backdrop.jpg\");\n    margin: 0;\n  }\n`;\n\nfunction App() {\n  const [hatches, setHatches] = useState(createCalendar());\n\n  useEffect(() => {\n    // Could use if statements instead off course\n    const calendar = localStorage.calendar\n      ? JSON.parse(localStorage.calendar)\n      : createCalendar();\n\n    setHatches(calendar);\n  }, []);\n\n  // Store calendar in localStorage\n  useEffect(() => {\n    // Could use if statements instead off course\n    hatches.length && localStorage.setItem(\"calendar\", JSON.stringify(hatches));\n  }, [hatches]);\n\n  const handleFlipHatch = id => {\n    const updatedHatches = hatches.map(hatch =>\n      hatch.id === id ? { ...hatch, open: !hatch.open } : hatch\n    );\n    setHatches(updatedHatches);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <StyledApp>\n        {hatches.map(hatch => (\n          <Hatch\n            key={hatch.id}\n            hatchData={hatch}\n            handleClick={handleFlipHatch}\n          />\n        ))}\n      </StyledApp>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}