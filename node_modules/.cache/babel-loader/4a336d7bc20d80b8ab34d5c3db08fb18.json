{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\benjamin\\\\Desktop\\\\start-here\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nbody {\\n  background: center / cover url(\\\"./img/calendar_backdrop.jpg\\\");\\n  margin: 0;\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { createCalendar } from \"./helpers\";\nimport Hatch from \"./Hatches\";\nimport { StyledApp } from \"./Style\";\nconst GlobalStyle = createGlobalStyle(_templateObject());\n\nfunction App() {\n  const _useState = useState(createCalendar()),\n        _useState2 = _slicedToArray(_useState, 2),\n        hatches = _useState2[0],\n        setHatches = _useState2[1];\n\n  const handleFlipHatch = id => {\n    console.log(id);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(StyledApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, hatches.map(hatch => React.createElement(Hatch, {\n    key: hatch.id,\n    hatchData: hatch,\n    handleClick: handleFlipHatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/benjamin/Desktop/start-here/src/App.js"],"names":["React","useState","useEffect","createGlobalStyle","createCalendar","Hatch","StyledApp","GlobalStyle","App","hatches","setHatches","handleFlipHatch","id","console","log","map","hatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAAQC,SAAR,QAAyB,SAAzB;AAEA,MAAMC,WAAW,GAAGJ,iBAAH,mBAAjB;;AAQA,SAASK,GAAT,GAAe;AAAA,oBACiBP,QAAQ,CAACG,cAAc,EAAf,CADzB;AAAA;AAAA,QACNK,OADM;AAAA,QACGC,UADH;;AAGb,QAAMC,eAAe,GAAIC,EAAD,IAAQ;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,GAFD;;AAGA,SACE,0CACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACM,GAAR,CAAaC,KAAD,IACX,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACJ,EADb;AAEE,IAAA,SAAS,EAAEI,KAFb;AAGE,IAAA,WAAW,EAAEL,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAcD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { createCalendar } from \"./helpers\";\nimport Hatch from \"./Hatches\";\nimport {StyledApp}  from \"./Style\";\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background: center / cover url(\"./img/calendar_backdrop.jpg\");\n  margin: 0;\n}\n`;\n\n\nfunction App() {\n  const [hatches, setHatches] = useState(createCalendar());\n\n  const handleFlipHatch = (id) => {\n    console.log(id);\n  };\n  return (\n    <>\n    <GlobalStyle/>\n      <StyledApp>\n        {hatches.map((hatch) => (\n          <Hatch\n            key={hatch.id}\n            hatchData={hatch}\n            handleClick={handleFlipHatch}\n          />\n        ))}\n      </StyledApp>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}